name: web_trigger_test

on:
  workflow_dispatch:
    inputs:
      ROM_URL:
        description: 'OTA Url'
        required: false
        default: ''
      vip:
        type: boolean
        description: Vietsub Pro
        default: true
      key:
        description: 'Active Key'
        required: true
        default: ''
      trigger:
        description: 'Trigger name'
        required: true
        default: 'Auto_Build'
      disnotification:
        type: boolean
        description: Disable Telegram CLI
        default: false
      corepatch:
        type: boolean
        description: Using CorePatch
        default: false

jobs:
  Auth:
    runs-on: ubuntu-latest
    outputs:
      active: ${{ steps.evaluate.outputs.active }}
    steps:
      - name: Test parameter
        run: |
          echo "ROM_URL=${{ github.event.inputs.ROM_URL }}"
          echo "Trigger=${{ github.event.inputs.trigger }}"
          echo "Key=${{ github.event.inputs.key }}"
          echo "Disable Notification=${{ github.event.inputs.disnotification }}"
          echo "CorePatch=${{ github.event.inputs.corepatch }}"

      - name: Authentication
        id: evaluate
        run: |
          echo "active=${{ github.event.inputs.key == secrets.AUTH_KEY }}" >> $GITHUB_ENV
          echo "active=${{ github.event.inputs.key == secrets.AUTH_KEY }}"
          echo "::set-output name=active::${{ github.event.inputs.key == secrets.AUTH_KEY }}"

      - name: Debug Auth Output
        run: echo "Active=${{ steps.evaluate.outputs.active }}"

  Build:
    needs: Auth
    if: ${{ needs.Auth.outputs.active == 'true' }}
    runs-on: ubuntu-latest
    environment: AutoBuild
    steps:
      - name: Test parameter
        run: |
          a=${{ github.event.inputs.ROM_URL }}
          a=${{ github.event.inputs.corepatch }}
          a=${{ github.event.inputs.disnotification }}


      - name: Clean 1
        run: |
          docker rmi `docker images -q` || true
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/sudo apt/sources.list.d || true
          sudo apt -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* || true
          sudo apt -y autoremove --purge || true
          sudo apt -y autoclean || true
          sudo apt clean || true

      - name: Clean 2
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: PREVIEW
          ssh-key: ${{ secrets.CLONE_KEY }}
          repository: buihien224/vietsub_erofs_tool

      - name: Setting up
        run: |
          sudo apt-get install -y git lz4 wget zip unzip android-sdk-libsparse-utils brotli axel python3-pip zipalign apksigner xmlstarlet vim aapt p7zip-full
          sudo pip3 install ConfigObj firebase_admin telebot

      - name: Set up VIETSUB
        run: |
          cd $GITHUB_WORKSPACE
          echo "Setting Viename timezone"
          sudo timedatectl set-timezone Asia/Ho_Chi_Minh

      - name: Set up Rclone
        run: |
          cd $GITHUB_WORKSPACE
          wget https://github.com/buihien224/toolbox_notification/releases/download/rclone/rclone1 -O bin/rclone1

      - name: Init Rom config
        run: |
          ./bhlnk -i ${{ github.event.inputs.trigger }} ${{ github.event.inputs.ROM_URL }} ${{ github.event.inputs.vip }} ${{ github.event.inputs.corepatch }}
  
      - name: Download ROM - Send Notification
        if: ${{ github.event.inputs.disnotification == 'false'  }}
        run: |
            ./bhlnk -p notification_t ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} 1 "$(git log -1 --pretty=format:"%s")" "${{ github.run_id }}"

      - name: Download ROM - Run Command
        run: |
          axel --insecure -n $(nproc) ${{ github.event.inputs.ROM_URL }}

      - name: Init project
        run: |
          sudo chmod 777 -R *

      - name: Download vsstuff - Send Notification
        if: ${{ github.event.inputs.disnotification == 'false'  }}
        run: |
          ./bhlnk -p notification_t ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} 2 "$(git log -1 --pretty=format:"%s")" "${{ github.run_id }}"

      - name: Download vsstuff - Run Command
        run: |
          ./bhlnk -s

      - name: Extract state - Send Notification
        if: ${{ github.event.inputs.disnotification == 'false'  }}
        run: |
          ./bhlnk -p notification_t ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} 3 "$(git log -1 --pretty=format:"%s")" "${{ github.run_id }}"

      - name: Extract state - Run Command
        run: |
          ./bhlnk -p extract

      - name: Patch ROM with MIUIVS mod - Send Notification
        if: ${{ github.event.inputs.disnotification == 'false'  }}
        run: |
          ./bhlnk -p notification_t ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} 4 "$(git log -1 --pretty=format:"%s")" "${{ github.run_id }}"

      - name: Patch ROM with MIUIVS mod - Run Command
        run: |
          ./bhlnk -p patchvs ${{ github.event.inputs.corepatch }}

      - name: Re-create partition - Send Notification
        if: ${{ github.event.inputs.disnotification == 'false'  }}
        run: |
          ./bhlnk -p notification_t ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} 5 "$(git log -1 --pretty=format:"%s")" "${{ github.run_id }}"

      - name: Re-create partition - Run Command
        run: |
          ./bhlnk -p pack 

      - name: Upload ROM - Send Notification
        if: ${{ github.event.inputs.disnotification == 'false'  }}
        run: |
          ./bhlnk -p notification_t ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} 6 "$(git log -1 --pretty=format:"%s")" "${{ github.run_id }}"

      - name: Upload ROM - Run Command
        run: |
          ./bhlnk -ut

      - name: Push Notification to Telegram
        if: ${{ github.event.inputs.disnotification == 'false'  }}
        run: |
          ./bhlnk -p notification_t ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} 0 "$(git log -1 --pretty=format:"%s")" "${{ github.run_id }}"

      - name: The job has cancelled - Send Notification
        if: ${{ cancelled() && github.event.inputs.disnotification == 'false'  }}
        run: |
          ./bhlnk -p notification_t ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} -1 "$(git log -1 --pretty=format:"%s")" "${{ github.run_id }}"

      - name: The job has failed - Send Notification
        if: ${{ failure() && github.event.inputs.disnotification == 'false'  }}
        run: |
          ./bhlnk -p notification_t ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} -2 "$(git log -1 --pretty=format:"%s")" "${{ github.run_id }}"
