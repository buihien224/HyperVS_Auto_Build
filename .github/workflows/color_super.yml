name: coloros_super_create

on:
  workflow_dispatch:
    inputs:
      ROM_URL:
        description: 'OTA Url'
        required: false
        default: ''
      key:
        description: 'Active Key'
        required: true
        default: ''
      trigger:
        description: 'Trigger name'
        required: true
        default: 'Auto_Build'

jobs:
  Auth:
    runs-on: ubuntu-latest
    outputs:
      active: ${{ steps.evaluate.outputs.active }}
    steps:
      - name: Authentication
        id: evaluate
        run: echo "active=${{ github.event.inputs.key == secrets.AUTH_KEY }}" >> $GITHUB_OUTPUT

  Build:
    needs : Auth
    if: ${{ needs.Auth.outputs.active == 'true' }}
    runs-on: ubuntu-latest
    environment: AutoBuild
    steps:
       - name: Test parameter
         run: |
            a=${{ github.event.inputs.ROM_URL }}
            c=${{ github.actor }}
            d=${{ github.server_url }}
            e=${{ github.repository }}
            f=${{ github.run_id }}
            
       - name: Clean 1
         run: |
            docker rmi `docker images -q` || true
            sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/sudo apt/sources.list.d || true
            sudo apt -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* || true
            sudo apt -y autoremove --purge || true
            sudo apt -y autoclean || true
            sudo apt clean || true

       - name: Clean 2
         uses: easimon/maximize-build-space@master
         with:
            root-reserve-mb: 512
            swap-size-mb: 1024
            remove-dotnet: "true"
            remove-android: "true"
            remove-haskell: "true"
            
       - name: Checkout
         uses: actions/checkout@v3
         with:
            ref: SSTOCK
            ssh-key: ${{ secrets.CLONEC_KEY }}
            repository: buihien224/colour_erofs_tool
       
       - name: Setting up
         run: |
            sudo apt-get install -y git lz4 wget zip unzip android-sdk-libsparse-utils brotli axel python3-pip zipalign apksigner xmlstarlet aapt p7zip-full device-tree-compiler aria2
            sudo pip3 install ConfigObj
            sudo pip3 install firebase_admin
            sudo pip3 install telebot
          
            
       - name: Set up VIETSUB 
         run: |
            cd $GITHUB_WORKSPACE
            echo "Setting Viename timezone"
            sudo timedatectl set-timezone Asia/Ho_Chi_Minh
            
       - name: Set up Rclone 
         run: |
             cd $GITHUB_WORKSPACE
             aria2c -x 16 -s 16 -j 1 -o bin/rclone1 https://github.com/buihien224/toolbox_notification/releases/download/rclone/rclone1

       - name: Download ROM
         run: |
            aria2c -x16 -s16 -j5 --file-allocation=none --summary-interval=10 ${{ github.event.inputs.ROM_URL }}

       - name : Init project
         run: |            
            ./bhlnk -i ${{ github.event.inputs.trigger }} ${{ github.event.inputs.ROM_URL }}
            sudo chmod 777 -R *

       - name: Extract state
         run: |
            ./bhlnk -p extract         

       - name: Re-create partition 
         run: |
            ./bhlnk -p pack 

       - name: Upload
         run: |
            ./bhlnk -u || exit 0  # Continue if not 0
            echo "Upload returned 0. Exiting workflow."
            exit 1

